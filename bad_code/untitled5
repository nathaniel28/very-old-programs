int x = tileX();
int y = tileY();
int map[][] = new int[10][10];  //9*9 map, 10-15 mines?
int flags[][] = new int[10][10];
void setup() {
  size(200, 200);
  grid();
  CreateMap();
  //debug();
}
void draw() {
  if (mousePressed && (mouseButton == LEFT)) {
    x = tileX();
    y = tileY();
    textSize(20);
    if (flags[x][y] == 0) {
      if (map[x][y] == 9) {
        fill(#BC0202);
        for (int a = 0; a < 10; a++) {
          for (int b = 0; b < 10; b++) {
            if (map[b][a] == 9) {
              text("*", b*20+5, a*20+21);
            }
          }
        }
      } else {
        fill(#000000);
        text(map[x][y], x*20+4, y*20+18);
        flags[x][y] = 2;
      }
    }
  } else if (mousePressed && (mouseButton == RIGHT)) {
    x = tileX();
    y = tileY();
    if (flags[x][y] == 0) {
      fill(#187612);
      textSize(15);
      text("^", x*20+5, y*20+18);
      flags[x][y] = 1;
    } else if (flags[x][y] == 1) {
      fill(#FFFFFF);
      rect(x*20,y*20,20,20);
      flags[x][y] = 0;
    }
    delay(150);
  }
}
void CreateMap() {
  for (int a = 0; a < 18; a++) {
    map[int(random(10))][int(random(10))] = 9;
  }
  for (int a = 0; a < 10; a++) {
    for (int b = 0; b < 10; b++) {
      int m = 0;
      if (map[b][a] != 9) {
        if ((b + 1 < 10) && (a - 1 >= 0)) {
          if (map[b + 1][a - 1] == 9) {
            m++;
          }
        }
        if (b + 1 < 10) {
          if (map[b + 1][a] == 9) {
            m++;
          }
        }
        if ((b + 1 < 10) && (a + 1 < 10)) {
          if (map[b + 1][a + 1] == 9) {
            m++;
          }
        }
        if (a + 1 < 10) {
          if (map[b][a + 1] == 9) {
            m++;
          }
        }
        if ((a + 1 < 10) && (b - 1 >= 0)) {
          if (map[b - 1][a + 1] == 9) {
            m++;
          }
        }
        if (b - 1 >= 0) {
          if (map[b - 1][a] == 9) {
            m++;
          }
        }
        if ((a - 1 >= 0) && (b - 1 >= 0)) {
          if (map[b - 1][a - 1] == 9) {
            m++;
          }
        }
        if (a - 1 >= 0) {
          if (map[b][a - 1] == 9) {
            m++;
          }
        }
        map[b][a] = m;
      }
    }
  }
}
void UpdateMap() {
  for (int a = 0; a < 10; a++) {
    for (int b = 0; b < 10; b++) {
      if ((flags[b][a] == 2) && (map[b][a] == 0)) {
        
      }
    }
  }
}
void grid() {
  for (int a = 0; a < 10; a++) {
    for (int b = 0; b < 10; b++) {
      rect(b*20,a*20,20,20);
    }
  }
}
int tileX() {
  return round(mouseX/20);
}
int tileY() {
  return round(mouseY/20);
}
void debug() {
  for (int a = 0; a < 10; a++) {
    for (int b = 0; b < 10; b++) {
      print(map[b][a]);
    }
    print("\n");
  }
}










































int x = tileX();
int y = tileY();
int map[][] = new int[10][10];  //9*9 map, 10-15 mines?
int flags[][] = new int[10][10];
void setup() {
  size(200, 200);
  grid();
  CreateMap();
  debug();
}
void draw() {
  if (mousePressed && (mouseButton == LEFT)) {
    x = tileX();
    y = tileY();
    textSize(20);
    if (flags[x][y] == 0) {
      if (map[x][y] == 9) {
        fill(#BC0202);
        for (int a = 0; a < 10; a++) {
          for (int b = 0; b < 10; b++) {
            if (map[b][a] == 9) {
              text("*", b*20+5, a*20+21);
            }
          }
        }
      } else {
        fill(#000000);
        text(map[x][y], x*20+4, y*20+18);
        flags[x][y] = 2;
        UpdateMap(x,y);
      }
    }
  } else if (mousePressed && (mouseButton == RIGHT)) {
    x = tileX();
    y = tileY();
    if (flags[x][y] == 0) {
      fill(#187612);
      textSize(15);
      text("^", x*20+5, y*20+18);
      flags[x][y] = 1;
    } else if (flags[x][y] == 1) {
      fill(#FFFFFF);
      rect(x*20,y*20,20,20);
      flags[x][y] = 0;
    }
    delay(150);
  }
}
void CreateMap() {
  for (int a = 0; a < 18; a++) {
    map[int(random(10))][int(random(10))] = 9;
  }
  for (int a = 0; a < 10; a++) {
    for (int b = 0; b < 10; b++) {
      int m = 0;
      if (map[b][a] != 9) {
        if ((b + 1 < 10) && (a - 1 >= 0)) {
          if (map[b + 1][a - 1] == 9) {
            m++;
          }
        }
        if (b + 1 < 10) {
          if (map[b + 1][a] == 9) {
            m++;
          }
        }
        if ((b + 1 < 10) && (a + 1 < 10)) {
          if (map[b + 1][a + 1] == 9) {
            m++;
          }
        }
        if (a + 1 < 10) {
          if (map[b][a + 1] == 9) {
            m++;
          }
        }
        if ((a + 1 < 10) && (b - 1 >= 0)) {
          if (map[b - 1][a + 1] == 9) {
            m++;
          }
        }
        if (b - 1 >= 0) {
          if (map[b - 1][a] == 9) {
            m++;
          }
        }
        if ((a - 1 >= 0) && (b - 1 >= 0)) {
          if (map[b - 1][a - 1] == 9) {
            m++;
          }
        }
        if (a - 1 >= 0) {
          if (map[b][a - 1] == 9) {
            m++;
          }
        }
        map[b][a] = m;
      }
    }
  }
}
void UpdateMap(int xx,int yy) {
  for (int stop = 0; stop == 0;) {
    stop = 1;
    for (int a = 0; a < 10; a++) {
      for (int b = 0; b < 10; b++) {
        if ((flags[b][a] == 2) && (map[b][a] == 0)) {
          fill(#000000);
          if ((xx + 1 < 10) && (yy - 1 >= 0)) {
            text(map[xx + 1][yy - 1], (x + 1)*20+4, (y - 1)*20+18);
            if (map[xx + 1][yy - 1] == 0) {
              stop = 0;
            }
          }
          if (xx + 1 < 10) {
            text(map[xx + 1][yy], (x + 1)*20+4, (y + 1)*20+18);
            if (map[xx + 1][yy] == 0) {
              stop = 0;
            }
          }
          if ((xx + 1 < 10) && (yy + 1 < 10)) {
            text(map[xx + 1][yy + 1], (x + 1)*20+4, (y + 1)*20+18);
            if (map[xx + 1][yy + 1] == 0) {
              stop = 0;
            }
          }
          if (yy + 1 < 10) {
            text(map[xx][yy + 1], x*20+4, (y + 1)*20+18);
            if (map[xx][yy + 1] == 0) {
              stop = 0;
            }
          }
          if ((xx + 1 < 10) && (yy - 1 >= 0)) {
            text(map[xx + 1][yy - 1], (x + 1)*20+4, (y - 1)*20+18);
            if (map[xx + 1][yy - 1] == 0) {
              stop = 0;
            }
          }
          if (yy - 1 >= 0) {
            text(map[xx][yy - 1], x*20+4, (y - 1)*20+18);
            if (map[xx][yy - 1] == 0) {
              stop = 0;
            }
          }
          if ((xx - 1 >= 0) && (yy - 1 >= 0)) {
            text(map[xx - 1][yy - 1], (x - 1)*20+4, (y - 1)*20+18);
            if (map[xx - 1][yy - 1] == 0) {
              stop = 0;
            }
          }
          if (xx - 1 < 10) {
            text(map[xx - 1][yy], (x - 1)*20+4, y*20+18);
            if (map[xx - 1][yy] == 0) {
              stop = 0;
            }
          }
          flags[xx][yy] = 3;
          //stop = 0;
        }
      }
    }
  }
}
void grid() {
  for (int a = 0; a < 10; a++) {
    for (int b = 0; b < 10; b++) {
      rect(b*20,a*20,20,20);
    }
  }
}
int tileX() {
  return round(mouseX/20);
}
int tileY() {
  return round(mouseY/20);
}
void debug() {
  for (int a = 0; a < 10; a++) {
    for (int b = 0; b < 10; b++) {
      print(map[b][a]);
    }
    print("\n");
  }
}
